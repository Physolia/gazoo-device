// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The Pigweed lighting RPC proto definition.
// The source of truth of this proto can be found at https://github.com/project-chip/connectedhomeip/tree/master/examples/common/pigweed/protos
syntax = "proto3";

import "third_party/py/gazoo_device/protos/common.proto";

package chip.rpc;

message LightingColor {
  // Values are between 0x00 and 0xFE inclusive
  uint32 hue = 1;
  uint32 saturation = 2;
}

message LightingState {
  bool on = 1;
  // level is between 0 and 255 inclusively.
  optional uint32 level = 2;

  optional LightingColor color = 3;
}

service Lighting {
  // Set will return OK if all supported fields are successfully applied, any
  // unsupported fields will be ignored.
  // Get can be used to determine which fields are supported.
  rpc Set(LightingState) returns (pw.protobuf.Empty){}

  // Get will populate all of the supported lighting state fields with the
  // current values. This can be used to discover the devices supported
  // lighting features.
  rpc Get(pw.protobuf.Empty) returns (LightingState){}
}
